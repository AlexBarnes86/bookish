apply plugin: "java"
apply plugin: "war"
apply plugin: "eclipse"
apply plugin: "eclipse-wtp"

sourceCompatibility = 1.7
targetCompatibility = 1.7

manifest.mainAttributes (
	"Built-By": System.getProperty("user.name"),
	"Implementation-Title": "Bookish",
	"Implementation-Version": version,
	"Implementation-Vendor": "toastedbits.com"
)

project.ext.springVersion = "3.2.1.RELEASE"
project.ext.springDataGraphVersion = "2.2.0.RELEASE"
project.ext.aspectjVersion = "1.7.2"
project.ext.springSecurityVersion = "3.1.3.RELEASE"
project.ext.springVersion = "3.2.1.RELEASE"

repositories {
	mavenCentral()
	mavenLocal()
	maven {
		url "http://maven.springframework.org/release"
	}
	maven { //The pom for spring-data-neo4j unfortunately depends on an RC for cypher
		url "http://m2.neo4j.org/"
	}
}

configurations {
	runtime
	testCompile
	
	// From Spring Data Neo4j ///////////////////////////////////////////////////////////////
	ajtools
	aspectpath
}

configurations.all {
	exclude module:'commons-logging'
	exclude module:'logback'
}

dependencies {
	compile "cglib:cglib-nodep:2.2"
	compile "javax.servlet:javax.servlet-api:3.0.1"
	compile "javax.servlet:jstl:1.2"
	compile "org.codehaus.jackson:jackson-mapper-asl:1.8.3"
	compile "org.hibernate:hibernate-validator:4.2.0.Final" //optional dependency needed for use with spring data
	compile "org.neo4j:neo4j:1.8.1"
	compile "org.neo4j:neo4j-cypher:1.8.2"
	compile "org.slf4j:jcl-over-slf4j:1.7.2"
	compile "org.slf4j:slf4j-log4j12:1.7.2"
	compile "log4j:log4j:1.2.17"
	compile "org.springframework.security:spring-security-config:${springSecurityVersion}"
	compile "org.springframework.security:spring-security-core:${springSecurityVersion}"
	compile "org.springframework.security:spring-security-taglibs:${springSecurityVersion}"
	compile "org.springframework.security:spring-security-web:${springSecurityVersion}"
	compile "org.springframework:spring-core:${springVersion}"
	compile "org.springframework:spring-aop:${springVersion}"
	compile "org.springframework:spring-aspects:${springVersion}"
	compile "org.springframework:spring-beans:${springVersion}"
	compile "org.springframework:spring-context:${springVersion}"
	compile "org.springframework:spring-tx:${springVersion}"
	compile	"org.springframework:spring-web:${springVersion}"
	compile "org.springframework:spring-webmvc:${springVersion}"
	compile "org.webjars:jquery:1.9.1"
	compile "org.webjars:tinymce-jquery:3.4.9"
	
	//	compile "org.neo4j.app:neo4j-server:1.8.1"
	//	compile "org.neo4j.app:neo4j-server:1.8.1:static-web"
	
	testCompile "org.springframework:spring-test:3.2.1.RELEASE"
	testCompile "junit:junit:4.11"
	
	// From Spring Data Neo4j //////////////////////////////////////////////////////////////////////////////////////
	compile group: "org.springframework.data", name: "spring-data-neo4j", version: springDataGraphVersion
	testCompile group:"org.springframework", name: "spring-test", version: springVersion
	ajtools "org.aspectj:aspectjtools:$aspectjVersion"
	compile "org.aspectj:aspectjrt:$aspectjVersion"
	aspectpath group: "org.springframework.data", name: "spring-data-neo4j", version: springDataGraphVersion
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Include Spring Data Neo4j. 
// Adapted from: https://github.com/SpringSource/spring-data-neo4j/blob/master/build/gradle/springdataneo4j.gradle
task compileJava(overwrite: true, description: 'Compiles AspectJ Source', type: Ajc) {
	dependsOn processResources
	sourceSet = sourceSets.main
	inputs.files(sourceSet.java.srcDirs)
	outputs.dir(sourceSet.output.classesDir)
	aspectPath = configurations.aspectpath
}

task compileTestJava(overwrite: true, description: 'Compiles AspectJ Test Source', type: Ajc) {
	dependsOn processTestResources, compileJava, jar
	sourceSet = sourceSets.test
	inputs.files(sourceSet.java.srcDirs)
	outputs.dir(sourceSet.output.classesDir)
	aspectPath = files(configurations.aspectpath, jar.archivePath)
}

class Ajc extends DefaultTask {
	Ajc() {
		logging.captureStandardOutput(LogLevel.INFO)
	}

	@TaskAction
	def compile() {
		logger.info "Running ajc ..."

		ant.taskdef(resource: "org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties", classpath: project.configurations.ajtools.asPath)
		ant.iajc(classpath: sourceSet.compileClasspath.asPath, fork: 'true', destDir: sourceSet.classesDir.absolutePath,
				source: project.sourceCompatibility,
				target: project.targetCompatibility,
				aspectPath: aspectPath.asPath, sourceRootCopyFilter: '**/*.java', showWeaveInfo: 'true', Xlint: "ignore") {
			sourceroots {
				sourceSet.java.srcDirs.each {
					pathelement(location: it.absolutePath)
				}
			}
		}
	}
}
////////////////////////

eclipse {
	wtp {
		component {
			contextPath = 'bookish'
			deployName = 'bookish'
		}
	}
}
